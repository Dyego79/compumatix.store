generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Product {
  id            String         @id @default(uuid())
  title         String
  slug          String         @unique
  sku           String
  categoryId    Int
  brandId       Int
  mainImage     String
  mainImageExp  String?
  warranty      String?
  attributes    Json?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  amountStock   Int?
  cotizacion    Decimal?       @db.Decimal(10, 2)
  finalPrice    Decimal?       @db.Decimal(10, 2)
  highAverage   Int?
  iva           Decimal?       @db.Decimal(5, 2)
  lengthAverage Int?
  price         Decimal?       @db.Decimal(10, 2)
  stock         String?
  utility       Decimal?       @db.Decimal(10, 2)
  weightAverage Int?
  widthAverage  Int?
  externalId    Int?           @unique
  proveedorIt   String?
  deleted       Boolean        @default(false)
  CartItem      CartItem[]
  fichaProducto FichaProducto?
  brand         Brand          @relation(fields: [brandId], references: [id])
  category      Category       @relation(fields: [categoryId], references: [id])
}

model CartSession {
  id        String     @id @default(uuid())
  createdAt DateTime   @default(now())
  items     CartItem[]
}

model CartItem {
  id        String      @id @default(uuid())
  sessionId String
  productId String
  quantity  Int         @default(1)
  addedAt   DateTime    @default(now())
  product   Product     @relation(fields: [productId], references: [id], onDelete: Cascade)
  session   CartSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)

  @@unique([sessionId, productId])
}

model Category {
  id              Int       @id @default(autoincrement())
  name            String
  initialB        Int?
  initialC        Int?
  name_normalized String?   @unique(map: "unique_category_normalized_name") @default(dbgenerated("lower(TRIM(BOTH FROM name))"))
  slug            String?   @unique(map: "category_slug_idx")
  products        Product[]
}

model Brand {
  id       Int       @id
  name     String
  imageUrl String?
  products Product[]
}

model FichaProducto {
  id                String   @id @default(uuid())
  productExternalId Int      @unique
  description       String?
  atributos         Json?
  createdAt         DateTime @default(now())
  imageUrlsHD       Json?
  imageUrlsThumb    Json?
  originalImages    Json?
  product           Product  @relation(fields: [productExternalId], references: [externalId])
}
